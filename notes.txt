TO DO - 10/8 - 10/9
x signup form
x error handling for signup form
x admin/member permissions
x navbar link visibility (login/signup/logout only when appropriate)

TO DO - 10/10
x error handling for login form
x OAuth signup option
x OAuth login option

TO DO - 10/11
x OAuth check for Alias
x General redirect/check for Alias
x edit user form and controller logic
x destroy user authorization (self or admin)
x user path authorizations
xxx cannot edit a user other than your own (unless admin)
xxx cannot destroy a user other than your own (unless admin)
xxx cannot navigate to 'new user' or 'login' if logged in
x two-part authentication for delete account button

TO DO 10/12
x create Character class
x Character class validations

TO DO 10/13
x finalize Character class validations
x dox methods
x create character routes (nested)

TO DO 10/14
x fix dox method
x character show page

TO DO 10/15
x delete character button
x create some seed data
x character forms
xxx new character form functionality
xxx edit character form functionality
x figure out css tree organization
x clean up css naming conventions
x new character link

TO DO 10/16
xxx new & edit form check security
xxx new & edit form styling
xxx new & edit form partial
xxx new & edit form error handling
x organize helpers

TO DO 10/17
x create Power class
xxx create CharacterPowers class
xxx create Moves class
xxx create PowerMoves class
x create reader/writers for Power move types
x create character/power routes
x create powers_controller
x create character_powers_controller
x create all necessary views/helpers/css files
x format power show pg (with link to "add to char")
x add link to nav bar to powers index
x create character/add_power form
- format index page for powers (with "add to char" link)
- create character/delete_power button (on char show page)
- route newly created characters to the power index to browse powers


RUNNING TO DO
- character form instructions
- invalid path handling
- create Battle class

POSSIBLY CUT
- create Hero decorator
- create Villain decorator
- create Team class
--- create TeamMember class
- create Plikes class


TO DO - MASTER LIST
x scope method
x has_many/belongs_to
x has_many through
- many to many with user input - BATTLES
x OAuth signup
x OAuth login
x reasonable validations
x standard authentication (signup/login/logout/secure passwords)
x nested resources
xxx nested :new route with form - USER'S NEW CHARACTER
xxx nested :show route - USER'S CHARACTERS
x forms display correct validation errors
x forms use a .fields_with_errors class
- reasonably DRY
x no scaffolding




CREDIT FOR PICTURES:
default profile pic - Photo by Soroush golpoor on Unsplash
